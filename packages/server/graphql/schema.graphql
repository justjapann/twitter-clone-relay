"""
Root query
"""
type Query {
  posts(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the first n items from the list.
    """
    first: Int

    """
    Returns the items in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the last n items from the list.
    """
    last: Int
  ): PostConnection!
}

"""
A connection to a list of items.
"""
type PostConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [PostEdge]
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

"""
An edge in a connection.
"""
type PostEdge {
  """
  The item at the end of the edge
  """
  node: Post

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
Post Type
"""
type Post {
  id: String
  body: String
}

type Mutation {
  CreatePost(input: CreatePostInput!): CreatePostPayload
  DeletePost(input: DeletePostInput!): DeletePostPayload
  UpdatePost(input: UpdatePostInput!): UpdatePostPayload
}

type CreatePostPayload {
  postEdge: PostEdge
  error: String
  clientMutationId: String
}

input CreatePostInput {
  body: String!
  clientMutationId: String
}

type DeletePostPayload {
  error: String
  success: String
  clientMutationId: String
}

input DeletePostInput {
  id: String!
  clientMutationId: String
}

type UpdatePostPayload {
  postEdge: PostEdge
  error: String
  clientMutationId: String
}

input UpdatePostInput {
  id: String!
  body: String!
  clientMutationId: String
}
